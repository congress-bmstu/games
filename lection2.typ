#import "notes.typ": *
#import "@preview/cetz:0.3.2"
#import "@preview/cetz-plot:0.1.1": *

= Лекция 2

#example[
  #figure(
    table(
      columns: 5,
      inset: 7pt,
      align: horizon,
      table.header(
        table.cell(rowspan: 2)[Сырьё],
        table.cell(colspan: 3)[Продукт],
        [Запас],

        [A],
        [B],
        [C],
        [Сырья],

        [I],
        [16],
        [10],
        [1],
        [112],
        [II],
        [12],
        [4],
        [1],
        [64],
        [III],
        [4],
        [2],
        [1],
        [24],
        [Прибыль],
        [15],
        [15],
        [1],
      ),
    ),
  )

  $x_1,x_2,x_3$ -- объемы A,B,C.
  $ f=15x_1 + 5x_2 + x_3 -> max $
  $
    cases(
      16x_1 + 10x_2+x_3 <= 112,
      12x_1+4x_2+x_3<=64,
      4x_1+2x_2+x_3<=24,
    )
  $
  Исключим базисные переменные из $f$. Целевая фунция:
  $ f=11x_1+3x_2+24 -> max $
  Исключим базисные переменные из условий:
  $ cases(3x_1+2x_2<=22,4x_1+x_2<=20) $

  Получили:
  $
    f = 11x_1+3x_2+24->max,quad
    cases(
    3x_1+2x_2<=22,
    4x_1+x_2<=20,
    2x_1+x_2<=12,
    x_i>=0\,space i=overline(1\,2)
    )
  $

  Графическое решение. Запишем уравнения прямых:
  $
    cases(
      l_1: x_1/(22/3) + x_2/11=1,
      l_2: x_1/5 +x_2/20=1 ,
      l_3: x_1/6 + x_2/12=1
    )
  $

  Изобразим прямые, см. @ex1_p1
  #figure(
    cetz.canvas(
      {
        import cetz.draw: *
        let domain = (-0.9, 8)
        plot.plot(
          axis-style: "school-book",
          y-min: -1,
          {
            plot.add(x => (1 - x / (22 / 3)) * 11, domain: domain, label: [$l_1$])
            plot.add(x => (1 - x / 5) * 20, domain: domain, label: [$l_2$])
            plot.add(x => (1 - x / 6) * 12, domain: domain, label: [$l_3$])
          },
        )
      },
      length: 30%,
    ),
    caption: "Допустимая область ниже всех прямых в I координатной четверти",
  )<ex1_p1>

  В точках $A,B,C,D(5,0)$:
  $ f(B) =70, f(C)=80, f(D)=79 $

  Следовательно:
  $ x^* = vec(4,4), quad f^* = 80 $
  $ f = 15x_1 +5x_2+x_3 -> max $

  $
    cases(
      16x_1 + 10x_2+x_3 +x_4= 112,
      12x_1+4x_2+x_3+x_5=64,
      4x_1+2x_2+x_3=24,
    )arrow.double
    mat(
      16,10,1,1,0,112;
      12,4,1,0,1,64;
      4,2,1,0,0,24;
      augment: #5
    )~
    mat(
      12,8,0,1,0,88;
      8,2,0,0,1,40;
      4,2,1,0,0,24;
      augment: #5
    )
  $
  Получили:
  $ x_"оп" = (0; 0; 24; 88; 40), quad f-11x_1-3x_2=24 $
  Симплекс таблица:
  #figure(
    pad(
      x: 10%,
      table(
        columns: (1fr, 1fr, 1.5fr, 1.5fr, 1.5fr, 1.5fr, 1.5fr, 2fr),
        inset: 8pt,
        table.header([*БН*], [*СЧ*], [$bold(x_1)$], [$bold(x_2)$], [$bold(x_3)$], [$bold(x_4)$], [$bold(x_5)$], []),
        [$x_3$], [24], [4], [2], [1], [0], [0], [$24 / 4=6$],
        [$x_4$], [88], [12], [8], [0], [1], [0], [$88 / 12=22 / 3$],
        [$x_5$], [40], table.cell(fill: yellow.lighten(80%))[8], [2], [0], [0], [1], table.cell(
          fill: yellow.lighten(80%),
        )[$40 / 8=5$],
        table.hline(stroke: 1.5pt),
        [$f$], [24], table.cell(fill: red.lighten(80%))[-11], [-3], [0], [0], [0], [],
        table.hline(stroke: 2pt),
        [$x_3$], [4], [0], table.cell(fill: yellow.lighten(80%))[1], [1], [0], [$-1 / 2$], table.cell(
          fill: yellow.lighten(80%),
        )[$4 / 1=4$],
        [$x_4$], [28], [0], [5], [0], [1], [$-3 / 2$], [$28 / 5$],
        [$x_1$], [5], [1], [$1 / 4$], [0], [0], [$1 / 8$], [$5 / (1\/4)=20$],
        table.hline(stroke: 1.5pt),
        [$f$], [79], [0], table.cell(fill: red.lighten(80%))[$-1 / 4$], [0], [0], [$11 / 8$], [],
        table.hline(stroke: 2pt),
        [$x_2$], [4], [0], [1], [1], [0], [$-1 / 2$], [],
        [$x_4$], [8], [0], [0], [-5], [1], [1], [],
        [$x_1$], [4], [1], [0], [$-1 / 4$], [0], [$1 / 4$], [],
        table.hline(stroke: 1.5pt),
        [$f$], [80], [0], [0], [$1 / 4$], [0], [$5 / 4$], [],
        table.hline(stroke: 2pt),
      ),
    ),
  )
  Получили,что:
  $
    f^* = 80, quad x^*=(4; 4; 0; 8; 0), quad x^*=(4; 4; 0)
  $
]

== Метод искусственного базиса
Рассматриваем задачу линейного программирования:
$
  &f(x) -> max(min)\
  &A x = b
  &x>=0
$
Можно записать как:
$
  &a_(11)x_1+a_(12)x_2 + dots.c + a_(1n)x_n &= b_1\
  &a_(21)x_1+a_(22)x_2 + dots.c + a_(2n)x_n &= b_2\
  &dots.v&\
  &a_(m 1)x_1+a_(m 2)x_2 + dots.c + a_(m n)x_n &= b_m
$

Введем искусственные переменные $y_1,dots, y_m$
$
  &a_(11)x_1&+a_(12)x_2 &+ dots.c &+ a_(1n)x_n &+ y_1 &= b_1\
  &a_(21)x_1&+a_(22)x_2 &+ dots.c &+ a_(2n)x_n &+ y_2 &= b_2\
  &dots.v\
  &a_(m 1)x_1&+a_(m 2)x_2 &+ dots.c &+ a_(m n)x_n &+ y_m &= b_m
$
Или в матричной записи $A x + y = b$

Составим $F = sum_i y_i$. Если $F^* >0$, то опорное решение получить нельзя.

#example[
  $
    cases(
      &3x_1&-5x_2&+x_3&+2x_4&&=1,
      &2x_1&-2x_2&&+x_4&-x_5&=-4,
      &x_1&-3x_2&&+2x_4&-x_5&=-5
    )
  $
  В первом уравнении есть базисная переменная $x_3$, добавим искусственные переменные в второе и третье уравнения (также домножим их на -1, чтобы свободные члены были неотрицательны):
  $
    cases(
      &3x_1&-5x_2&+x_3&+2x_4&&&&=1,
      &-2x_1&+2x_2&&-x_4&+x_5&&-y_1&=4,
      &-x_1&+3x_2&&-2x_4&+x_5&&-y_2&=5
    )
  $
  Составим функцию $F$:
  $
    F=y_1+y_2 -> min
  $
  Выразим $F$:
  $
    F=&4+2x_1-2x_2+x_4-x_5+5+x_1-3x_2+2x_4-x_5=\
    =&3x_1-5x_2+3x_4-2x_5+9\
    arrow.r.l.double &F-3x_1+5x_2-3x_4+2x_5=9
  $
  Симплекс таблица:
  #let y = table.cell.with(fill: yellow.lighten(80%))
  #let r = table.cell.with(fill: red.lighten(80%))
  #let b = table.cell.with(fill: blue.lighten(70%))
  #figure(
    pad(
      x: 5%,
      table(
        columns: (1fr, 1fr, 1.5fr, 1.5fr, 1.5fr, 1.5fr, 1.5fr, 1.5fr, 1.5fr, 2fr),
        inset: 8pt,
        table.header(
          [*БН*],
          [*СЧ*],
          [$bold(x_1)$],
          [$bold(x_2)$],
          [$bold(x_3)$],
          [$bold(x_4)$],
          [$bold(x_5)$],
          [$bold(y_1)$],
          [$bold(y_2)$],
          [],
        ),

        [$x_3$], [1], [3], [-5], [1], [2], r[0], [0], [0], [$in.not RR$],
        [$y_1$], [4], [-2], [2], [0], [-1], r[1], [1], [0], y[4],
        [$y_2$], [5], [-1], [3], [0], [-2], r[1], [0], [1], [5],
        table.hline(stroke: 1.5pt),
        [$F$], [9], [-3], [5], [0], [-3], r[2], [0], [0], [],
        table.hline(stroke: 2pt),

        [$x_3$], [1], [3], r[-5], [1], [2], [0], [0], [0], [$<0$],
        [$x_5$], [4], [-2], r[2], [0], [-1], [1], [1], [0], [2],
        [$y_2$], [1], [1], r[1], [0], [-1], [0], [-1], [1], y[1],
        table.hline(stroke: 1.5pt),
        [$F$], [1], [1], r[1], [0], [-1], [0], [-2], [0], [],
        table.hline(stroke: 2pt),

        [$x_3$], [6], [8], [0], [1], [-3], [0], [-5], [5], [],
        [$x_5$], [2], [-4], [0], [0], [1], [1], [3], [-2], [],
        [$x_2$], [1], [1], [1], [0], [-1], [0], [-1], [1], [],
        table.hline(stroke: 1.5pt),
        b[$F$], b[0], b[0], b[0], b[0], b[0], b[0], b[-1], b[-1], [$<=0$],
        table.hline(stroke: 2pt),
      ),
    ),
  )
  Отсюда следует:
  $
    F=0, cases(
      &8x_1&&+x_3&-3x_4&&=6,
      &-4x_1&&&+x_4&+x_5&=2,
      &x_1&+x_2&&-x_4&&=1
    )
  $
  А дальше по симплексу... #qed()
]\

#example[
  $
    F=-2x_1+x_2-x_3 -> min, quad arrow(x)>=0\
    cases(
      2x_1+x_2+x_3=4,
      x_1-2x_3<=5,
      2x_1+2x_3>=3
    ) arrow.double
    cases(
      2x_1+x_2+x_3=4,
      x_1-2x_3+x_4=5,
      2x_1+2x_3-x_5=3
    ) arrow.double
    cases(
      2x_1+x_2+x_3+x_6=4,
      x_1-2x_3+x_4=5,
      2x_1+2x_2-x_5+x_7=3
    )
  $
  Найдем $F = x_6 + x_7$:
  $ F+4x_1+3x_2+x_3-x_5=7 $

  Симплекс таблица:
  #let y = table.cell.with(fill: yellow.lighten(80%))
  #let r = table.cell.with(fill: red.lighten(80%))
  #let b = table.cell.with(fill: blue.lighten(70%))
  #figure(
    pad(
      x: 5%,
      table(
        columns: (1fr, 1fr, 1.5fr, 1.5fr, 1.5fr, 1.5fr, 1.5fr, 1.5fr, 1.5fr, 2fr),
        inset: 8pt,
        table.header(
          [*БН*],
          [$bold(x_1)$],
          [$bold(x_2)$],
          [$bold(x_3)$],
          [$bold(x_4)$],
          [$bold(x_5)$],
          [$bold(x_6)$],
          [$bold(x_7)$],
          [*СЧ*],
          [],
        ),

        [$x_6$], [2], [1], r[1], [0], [0], [1], [0], [4], [$1 / 4$],
        [$x_4$], [1], [0], r[-2], [1], [0], [0], [0], [5], [$<0$],
        [$x_7$], [2], [2], r[0], [0], [-1], [0], [1], [3], y[0],
        table.hline(stroke: 1.5pt),
        [$f$], [2], [-1], r[1], [0], [0], [0], [0], [0], [],
        [$F$], [4], [3], r[1], [0], [-1], [0], [0], [7], [],
        table.hline(stroke: 2pt),

        table.cell(colspan: 10)[...]
      ),
    ),
  )

  $
    f^*=-4,quad arrow(x^*)=vec(3/2,0,1)
  $
]

== Взаимно-двойственные задачи

Частный случай в матричной форме:
#figure(
  table(
    columns: 3,
    stroke: none,
    column-gutter: 5%,
    align: horizon + center,
    [I], [], [II],
    [$ cases( A x <= b, x>=0, f(c\,x)+x_0->max ) $],
    [$stretch(arrow.r.l.double)^"двойственные"$],
    [$ cases(A^T y >= c,y>=0,phi(b\,y)+c_0->min) $],
  ),
)

#theorem(title: "Двойственности (первая)")[
  Если исходная задача имеет оптимальное решение, то и двойственная ей также имеет оптимальное решение. При этом оптимальные значения целевых функций равны:
  $ f_max = phi_min $
]
#theorem(title: "Двойственности (вторая)")[
  Оптимальные решения $x^*, y^*$ пары двойственных задач связаны между собой соотношениями(условиями) дополняющей нежесткости:
]
#remark[
  Если исходная задача неразрешима из-за неограниченности целевой функции, то двойственная задача неразрешима из-за отсутсвия допустимых решений. И наоборот.
]
#example[
  $
    cases(
      x_1+3x_2<=5,
      6x_2-8x_1<=11
    )arrow.r.l.double
    cases(
      (x_1^*+3x_2^*-5)y_1^*=0,
      (6x_2^*-8x_1^*-11)y_2^*=0
    )": условия дополняющей нежесткости"
  $
]
